// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  clerkId   String    @unique
  email     String    @unique
  name      String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  incomes   Income[]
  expenses  Expense[]
  budgets   Budget[]
}

model Income {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  amount      Float
  category    String   // Startup, Job, Freelance, Social Media
  description String?
  date        DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String   @db.ObjectId
}

model Expense {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  amount      Float
  category    String   // Bills & Recharge, Traveling, Entertainment, Education & Courses
  description String?
  date        DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String   @db.ObjectId
}

model Budget {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  year      Int
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @db.ObjectId

  @@unique([userId, year])
}
